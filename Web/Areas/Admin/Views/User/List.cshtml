<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link href="~/admin/assets/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/admin/css/style.css" />
    <link href="~/admin/css/page.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/admin/assets/css/ace.min.css" />
    <link rel="stylesheet" href="~/admin/assets/css/font-awesome.min.css" />
    <script src="~/admin/js/jquery-1.9.1.min.js"></script>
    <script src="~/admin/assets/js/bootstrap.min.js"></script>
    <script src="~/admin/assets/js/typeahead-bs2.min.js"></script>
    <script src="~/admin/assets/js/jquery.dataTables.min.js"></script>
    <script src="~/admin/assets/js/jquery.dataTables.bootstrap.js"></script>
    <script src="~/admin/assets/layer/layer.js" type="text/javascript"></script>
    <script src="~/admin/assets/laydate/laydate.js" type="text/javascript"></script>
    <script src="~/admin/js/vue.min2.5.16.js"></script>
    <script src="~/admin/js/vue-resource.min1.5.0.js"></script>
    <script src="~/admin/js/wangEditor.min.js"></script>
    <title>会员管理</title>
</head>
<body>
    <div id="app" class="page-content clearfix">
        <!--搜索开始-->
        <div class="search_style">
            <div class="title_names">用户查询</div>
            <ul class="search_content clearfix">
                <li><label class="l_f">账号</label><input type="text" class="text_add" v-model="searchs.keyword" placeholder="输入账号" style=" width:200px" /></li>
                <li>
                    <label class="l_f">添加时间</label>
                    <input class="inline laydate-icon" id="start" style="margin-left:10px;" v-on:focus='getstart' />至
                    <input class="inline laydate-icon" id="end" style="margin-left:10px;" v-on:focus='getend' />
                </li>
                <li style="width:90px;"><button type="button" v-on:click="search" class="btn_search"><i class="icon-search"></i>查询</button></li>
            </ul>
        </div>
        <!--搜索结束-->

        <div class="border clearfix" style="display:none;">
            <span class="l_f">
                <a title="添加管理员" v-on:click="add" class="btn btn-warning Order_form"><i class="icon-plus"></i>添加管理员</a>
            </span>
            <span class="r_f">共：<b>2334</b>件商品</span>
        </div>

        <!--列表展示开始-->
        <div class="table_menu_list" id="testIframe">
            <table class="table table-striped table-bordered table-hover" id="sample-table">
                <thead>
                    <tr>
                        <th width="25px"><input type="checkbox" class="check_all" value="0" /></th>
                        <th width="60">编号</th>
                        <th width="100">注册时间</th>
                        <th width="60">邀请码</th>
                        <th width="80">会员账号</th>
                        <th width="80">等级</th>
                        <th width="80">推荐人账号</th>
                        <th width="80">余额</th>
                        <th width="60">状态</th>
                        <th width="250">操作</th>
                    </tr>
                </thead>
                <tbody tbody=tbody v-for="item in list">
                    <tr>
                        <td><input type="checkbox" class="check_all" v-bind:value="item.id" /></td>
                        <td v-html="item.id"></td>
                        <td v-html="item.createTime"></td>
                        <td v-html="item.userCode"></td>
                        <td v-html="item.mobile"></td>
                        <td v-html="item.levelName"></td>
                        <td v-html="item.recommendCode"></td>
                        <td v-html="item.amount"></td>
                        <td class="td-status"><span class="label label-success radius" v-html="item.enabled?'已启用':'已冻结'"></span></td>
                        <td class="td-manage">
                            <a v-bind:title="item.isEnabled?'冻结':'解冻'" v-if="item.name!='admin'" v-on:click="frozen(item.id,item.enabled)" class="btn btn-xs btn-success"><i class="icon-ok bigger-120"></i></a>
                            <a title="修改密码" v-on:click="editPwd(item.id,item.mobile)" class="btn btn-xs btn-info"><i class="icon-edit bigger-120"></i></a>
                            <a title="查看直推图" v-on:click="tree(item.id)" class="btn btn-xs btn-info"><i class="icon-sitemap bigger-120"></i></a>
                            <a title="删除" v-if="item.name!='admin'" v-on:click="del(item.id)" class="btn btn-xs btn-warning"><i class="icon-trash  bigger-120"></i></a>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <!--列表展示结束-->
        <!--分页开始-->
        <div class="page-bar">
            <ul>
                <li><a v-on:click="pages.cur=1,getpage()">首页</a></li>
                <li v-if="pages.cur>1"><a v-on:click="pages.cur--,getpage()">上一页</a></li>
                <li v-if="pages.cur==1"><a class="banclick">上一页</a></li>
                <li v-for="index in indexs" v-bind:class="{'active':pages.cur==index}"><a v-on:click="pageclick(index)" v-html="index"></a></li>
                <li v-if="pages.cur!=pages.all"><a v-on:click="pages.cur++,getpage()">下一页</a></li>
                <li v-if="pages.cur==pages.all"><a class="banclick">下一页</a></li>
                <li><a><input type='text' id='txtpage' style='width: 30px;height: 18px;' v-model="pages.txtpage" onkeyup="value=value.replace(/[^\d]/g,'')" /></a></li>
                <li><a id='go' v-on:click="go">跳转</a></li>
                <li><a v-on:click="pages.cur=pages.all,getpage()">尾页</a></li>
                <li><a>共<i><font v-html="pages.all"></font></i>页</a></li>
            </ul>
        </div>
        <!--分页结束-->
        <!--添加图层开始-->
        <div class="add_menber" id="add" style="display:none">
            <ul class="page-content">
                <li><label class="label_name">用户账号：</label><span class="add_name"><input type="text" placeholder="用户账号" v-model="adds.mobile" class="text_add" /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">推荐人账号：</label><span class="add_name"><input type="text" placeholder="推荐人账号" v-model="adds.recommendCode" class="text_add" /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">密码：</label><span class="add_name"><input type="password" placeholder="密码" v-model="adds.password" class="text_add" /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">确认密码：</label><span class="add_name"><input type="password" placeholder="确认密码" v-model="adds.password1" class="text_add" /></span><div class="prompt r_f"></div></li>
            </ul>
        </div>
        <!--添加图层结束-->
        <!--修改密码图层开始-->
        <div class="add_menber" id="edit_pwd" style="display:none">
            <ul class="page-content">
                <li><label class="label_name">账号：</label><span class="add_name"><input type="text" style="border:0px;color:black" readonly=readonly v-model="edits.name" class="text_add" /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">新密码：</label><span class="add_name"><input type="password" placeholder="新密码" v-model="edits.password" class="text_add" /></span><div class="prompt r_f"></div></li>
                <li><label class="label_name">确认密码：</label><span class="add_name"><input type="password" placeholder="确认密码" v-model="edits.password1" class="text_add" /></span><div class="prompt r_f"></div></li>
            </ul>
        </div>
        <!--修改密码图层结束-->
    </div>
    <script>
        var startTime;
        var endTime;
        var vue = new Vue({
            el: "#app",
            data: {
                pages: {
                    all: "", cur: 1, txtpage: ""
                },
                searchs: {
                    keyword: "", startTime: "", endTime: ""
                },
                list: [],
                adds: {
                    recommendCode: "", mobile: "", password: "", password1: ""
                },
                edits: {
                    name: "", password: "", password1: ""
                }
            },
            methods: {
                //分页获取后台数据方法
                getpage: function () {
                    this.$http.post('/admin/user/list', { keyword: this.searchs.keyword, startTime: this.searchs.startTime, endTime: this.searchs.endTime, pageIndex: this.pages.cur }, { emulateJSON: true }).then(function (result) {
                        this.list = result.data.data.list;
                        this.pages.all = result.data.data.pageCount;
                    })
                },
                //分页点击方法
                pageclick: function (index) {//页码点击事件
                    if (index != this.cur) {
                        this.pages.cur = index
                    }
                    this.getpage();
                },
                //分页跳转方法
                go: function () {
                    if (this.pages.txtpage == "") {
                        return;
                    }
                    else {
                        this.pages.cur = this.pages.txtpage;
                    }
                    this.getpage();
                },
                //获取搜索开始时间方法
                getstart: function () {
                    var that = this;
                    that.searchs.startTime = "";
                    laydate({
                        elem: '#start',
                        istoday: false,
                        choose: function (date) {
                            that.searchs.startTime = date;
                        }
                    });
                },
                //获取搜索结束时间方法
                getend: function () {
                    var that = this;
                    that.searchs.endTime = "";
                    laydate({
                        elem: '#end',
                        istoday: false,
                        choose: function (date) {
                            that.searchs.endTime = date;
                        }
                    });
                },
                //查询方法
                search: function () {
                    this.getpage();
                },
                //冻结方法
                frozen: function (id, enabled) {
                    var that = this;
                    var msg = '用户账号冻结后将无法登陆，确认冻结吗？';
                    var msg1 = '是否冻结用户';
                    if (!enabled) {
                        msg = '确认解冻用户账号吗？';
                        msg1 = '是否解冻用户';
                    }
                    layer.confirm(msg, { icon: 0, title: msg1 }, function () {
                        that.$http.post('/admin/user/frozen', { id: id }, { emulateJSON: true }).then(function (result) {
                            if (result.data.status == 1) {
                                layer.alert(result.data.msg, { icon: 0, title: '提示框' });
                                that.getpage();
                            }
                            else if (result.data.status == 0) {
                                layer.alert(result.data.msg, { icon: 0, title: '提示框' });
                            }
                            else if (result.data.status == 302) {
                                window.location.href = result.data.data;
                            }
                        });
                    });
                },
                //删除方法
                del: function (id) {
                    var that = this;
                    layer.confirm("用户删除后无法恢复，确认删除吗？", { icon: 0, title: '是否删除用户' }, function (index) {
                        that.$http.post('/admin/user/del', { id: id }, { emulateJSON: true }).then(function (result) {
                            if (result.data.status == 1) {
                                layer.alert(result.data.msg, { icon: 6, title: '提示框' });
                                that.getpage();
                            }
                            else if (result.data.status == 0) {
                                layer.alert(result.data.msg, { icon: 0, title: '提示框' });
                            }
                            else if (result.data.status == 302) {
                                window.location.href = result.data.data;
                            }
                        });
                    });
                },
                //添加方法
                add: function () {
                    var that = this;
                    that.adds.name = "";
                    that.adds.mobile = "";
                    that.adds.password = "";
                    that.adds.password1 = "";
                    layer.open({
                        type: 1,
                        title: '添加管理员',
                        maxmin: true,
                        shadeClose: false, //点击遮罩关闭层
                        area: ['400px', ''],
                        content: $('#add'),
                        btn: ['确认', '取消'],
                        yes: function (index, layero) {
                            if (that.adds.name == "") {
                                layer.alert('管理员帐号不能为空', { icon: 0, title: '提示框' });
                                return;
                            }
                            var reg = /^1\d{10}$/;
                            if (!reg.test(that.adds.mobile)) {
                                layer.msg('管理员手机号格式不正确', { icon: 1 });
                                return;
                            }
                            if (that.adds.mobile == "") {
                                layer.alert('管理员手机号不能为空', { icon: 0, title: '提示框' });
                                return;
                            }
                            if (that.adds.password == "") {
                                layer.alert('管理员密码不能为空', { icon: 0, title: '提示框' });
                                return;
                            }
                            if (that.adds.password != that.adds.password1) {
                                layer.alert('两次输入的密码不一致', { icon: 0, title: '提示框' });
                                return;
                            }
                            that.$http.post('/admin/admin/add', { name: that.adds.name, mobile: that.adds.mobile, password: that.adds.password }, { emulateJSON: true }).then(function (result) {
                                if (result.data.status == 1) {
                                    layer.alert(result.data.msg, { icon: 6, title: '提示框' });
                                    layer.close(index);
                                    that.getpage();
                                }
                                else if (result.data.status == 0) {
                                    layer.alert(result.data.msg, { icon: 0, title: '提示框' });
                                }
                                else if (result.data.status == 302) {
                                    window.location.href = result.data.data;
                                }
                                else if (result.data.status == 401) {
                                    layer.alert(result.data.msg, { icon: 0, title: '提示框' });
                                }
                            });
                        }
                    });
                },
                //修改密码方法
                editPwd: function (id, name) {
                    var that = this;
                    this.edits.name = name;
                    layer.open({
                        type: 1,
                        title: '修改密码',
                        maxmin: true,
                        shadeClose: false, //点击遮罩关闭层
                        area: ['400px', ''],
                        content: $('#edit_pwd'),
                        btn: ['确认', '取消'],
                        yes: function (index, layero) {
                            if (that.edits.password == "") {
                                layer.alert('密码不能为空', { icon: 0, title: '提示框' });
                                return;
                            }
                            if (that.edits.password != that.edits.password1) {
                                layer.alert('两次输入的密码不一致', { icon: 0, title: '提示框' });
                                return;
                            }
                            that.$http.post('/admin/admin/editpwd', { id: id, password: that.edits.password }, { emulateJSON: true }).then(function (result) {
                                if (result.data.status == 1) {
                                    layer.alert(result.data.msg, { icon: 6, title: '提示框' });
                                    layer.close(index);
                                    that.getpage();
                                }
                                else if (result.data.status == 0) {
                                    layer.alert(result.data.msg, { icon: 0, title: '提示框' });
                                }
                                else if (result.data.status == 302) {
                                    window.location.href = result.data.data;
                                }
                            });
                        }
                    });
                },
                tree: function (id) {
                    window.location.href="/admin/user/membertree/"+id;
                }
            },
            computed: {
                //根据数据计算分页
                indexs: function () {
                    var count = 0;
                    var left = 1;
                    var right = this.pages.all;
                    var ar = [];
                    if (this.pages.all >= 5) {
                        if (this.pages.cur > 3 && this.pages.cur < this.pages.all - 2) {
                            left = Number(this.pages.cur) - 2;
                            right = Number(this.pages.cur) + 2;
                        } else {
                            if (this.pages.cur <= 3) {
                                left = 1
                                right = 5
                            } else {
                                right = this.pages.all
                                left = Number(this.pages.all) - 4
                            }
                        }
                    }
                    while (left <= right) {
                        ar.push(left)
                        left++
                    }
                    return ar
                }
            },
            mounted: function () {
                //初始化数据
                this.getpage();
            }
        });

        //laydate开始时间和结束时间初始化
        laydate({
            elem: '#start',
            istoday: false,
            event: 'focus'
        });
        laydate({
            elem: '#end',
            istoday: false,
            event: 'focus'
        });
    </script>
</body>
</html>